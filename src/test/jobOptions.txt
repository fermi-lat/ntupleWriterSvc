//##############################################################
//
// Job options file for ntupleWriterSvc test
//

// List of Services that are required for this run
ApplicationMgr.ExtSvc   = { "GlastDetSvc", "GlastEventSelector/EventSelector" , 
                            "EventCnvSvc", "ntupleWriterSvc"};

// List of DLLs required
ApplicationMgr.DLLs   = { "ntupleWriterSvc", "GlastSvc",  "RootHistCnv"};

ApplicationMgr.TopAlg = { "writeJunkAlg" };

// Set output level threshold (2=DEBUG, 3=INFO, 4=WARNING, 5=ERROR, 6=FATAL )
MessageSvc.OutputLevel      = 2;

//=========================================================================
// Persistency service setup:
EventPersistencySvc.CnvServices = {"EventCnvSvc"};

// Input IRF file
EventSelector.Input = "IRFFILE $(INSTRUMENTROOT)/src/test/muontest.irf";

ApplicationMgr.HistogramPersistency = "ROOT";

ntupleWriterSvc.tuple_name = { "TESTALG" };

writeJunkAlg.tupleName = "TESTALG";

// Output root ntuple file, specify by logical variable
NTupleSvc.Output = {"TESTALG DATAFILE='/heather/NTUPLES/testAlg.root' OPT='NEW'"};

// Number of Events to Process
ApplicationMgr.EvtMax = 20;


//==============================================================
//
// End of job options file
//
//##############################################################
